"""
Pseudo-code for models.
~~~~~~~~~~~~~~~~~~~~~~~~

Starting documentation at <http://ontology.projectchronos.eu/documentation/subsystems>

# instantiate the necessary properties
>>> class Property:
>>>     name = 'maxWorkingTemperature'

>>> prop1 = Property('maxWorkingTemperature')
>>> prop2 = Property('minWorkingTemperature')
>>> # ... instatiate all the necessary properties (yellow entities in the doc)


>>> class SubSysType:
>>>    # one instance for each of the classes at
>>>    # <http://ontology.projectchronos.eu/documentation/subsystems> (black entities in the doc)
>>>    type_ = 'Spacecraft_PrimaryPower'
>>>    allowed_properties = [
>>>        prop1,
>>>        prop2,
>>>        Property('minWorkingTemperature'),
>>>        Property('hasMaxAmpere'),
>>>        Property('hasMinAmpere'),
>>>        # ... (the predicates assigned to each object by the generation script)
>>>    ]

>>> primary_power = SubSysType('Spacecraft_PrimaryPower', [...])

>>> class Resource:
>>>    name = random_generated_name()                   # a random name generated by the script
>>>    type = primary_power                             # one of the object created with the class above


>>> component_123 = Resource(name=123, type=primary_power, [...])


>>> class Graph:
>>>    subject = component_123
>>>    predicate = prop1
>>>    object = value

>>>    for attribute in primary_power.allowed_predicate:        # every SubSysType has its own list of attributes
>>>        Graph(component123, attribute, random_generated_value()) # # (i.e. the one generated by the script)

In the end we should ahve the objects generated by the script in the Graph table.
"""
